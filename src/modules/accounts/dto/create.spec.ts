/* eslint-disable @typescript-eslint/ban-ts-comment */
// Generated by CodiumAI

import { AccountType } from '../types/accounts.types';
import { CreateAccountDTO } from './create.dto';

describe('CreateAccountDTO', () => {
  // Create a valid account with name and type
  it('should create a valid account when name and type are provided', () => {
    const account = new CreateAccountDTO();
    account.name = 'Test Account';
    account.type = AccountType.CREDIT;

    expect(account.name).toBe('Test Account');
    expect(account.type).toBe(AccountType.CREDIT);
  });

  // Create an account with optional owner field
  it('should create an account with optional owner field', () => {
    const account = new CreateAccountDTO();
    account.name = 'Test Account';
    account.type = AccountType.CREDIT;
    account.owner = 'John Doe';

    expect(account.name).toBe('Test Account');
    expect(account.type).toBe(AccountType.CREDIT);
    expect(account.owner).toBe('John Doe');
  });

  // Create an account with all possible types
  it('should create an account with all possible types', () => {
    const account1 = new CreateAccountDTO();
    account1.name = 'Test Account 1';
    account1.type = AccountType.CREDIT;

    const account2 = new CreateAccountDTO();
    account2.name = 'Test Account 2';
    account2.type = AccountType.DEBIT;

    const account3 = new CreateAccountDTO();
    account3.name = 'Test Account 3';
    account3.type = AccountType.CASH;

    const account4 = new CreateAccountDTO();
    account4.name = 'Test Account 4';
    account4.type = AccountType.CREDIT_AND_DEBIT;

    expect(account1.name).toBe('Test Account 1');
    expect(account1.type).toBe(AccountType.CREDIT);

    expect(account2.name).toBe('Test Account 2');
    expect(account2.type).toBe(AccountType.DEBIT);

    expect(account3.name).toBe('Test Account 3');
    expect(account3.type).toBe(AccountType.CASH);

    expect(account4.name).toBe('Test Account 4');
    expect(account4.type).toBe(AccountType.CREDIT_AND_DEBIT);
  });
});
